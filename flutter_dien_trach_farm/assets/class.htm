<!DOCTYPE html><html lang="vi"
 xmlns:fb="http://ogp.me/ns/fb#"><head ><meta charset="UTF-8" /><script data-cfasync="false" type="text/javascript">WebFontConfig={google:{families:['Economica%3A700','Lora%3A400%2C400italic'] },classes:false, events:false, timeout:1500};(function() {var wf = document.createElement('script');wf.src='https://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';wf.type='text/javascript';wf.defer='true';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(wf, s);})();</script><link type="text/css" media="all" href="https://gpcoder.com/wp-content/cache/autoptimize/css/autoptimize_d360b55ad5b1436e5dd97620a842c202.css" rel="stylesheet" /><link type="text/css" media="screen" href="https://gpcoder.com/wp-content/cache/autoptimize/css/autoptimize_065892e82b11b7e2276dab07a3bdf8a3.css" rel="stylesheet" /><title>Hướng dẫn Java Design Pattern - Singleton - GP Coder (Lập trình Java)</title><meta name="viewport" content="width=device-width, initial-scale=1" /><meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' /><meta name="description" content="Singleton thuộc nhóm Creational Design Pattern. Nó đảm bảo chỉ duy nhất một instance được tạo ra và cung cấp một method để có thể truy xuất được thể hiện duy nhất đó mọi lúc mọi nơi." /><link rel="canonical" href="https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" /><meta property="og:locale" content="vi_VN" /><meta property="og:type" content="article" /><meta property="og:title" content="Hướng dẫn Java Design Pattern - Singleton - GP Coder (Lập trình Java)" /><meta property="og:description" content="Singleton thuộc nhóm Creational Design Pattern. Nó đảm bảo chỉ duy nhất một instance được tạo ra và cung cấp một method để có thể truy xuất được thể hiện duy nhất đó mọi lúc mọi nơi." /><meta property="og:url" content="https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" /><meta property="og:site_name" content="GP Coder" /><meta property="article:publisher" content="https://www.facebook.com/GPCoder/" /><meta property="article:published_time" content="2018-09-08T01:00:19+00:00" /><meta property="article:modified_time" content="2020-04-26T14:21:20+00:00" /><meta property="og:image" content="https://gpcoder.com/wp-content/uploads/2018/08/design-patterns-singleton.png" /><meta property="og:image:width" content="678" /><meta property="og:image:height" content="426" /><meta name="twitter:card" content="summary" /><meta name="twitter:creator" content="@gpcodervn" /><meta name="twitter:site" content="@gpcodervn" /><meta name="twitter:label1" content="Được viết bởi" /><meta name="twitter:data1" content="GP Coder" /><meta name="twitter:label2" content="Ước tính thời gian đọc" /><meta name="twitter:data2" content="13 phút" /> <script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"WebSite","@id":"https://gpcoder.com/#website","url":"https://gpcoder.com/","name":"GP Coder","description":"Trang chia s\u1ebb ki\u1ebfn th\u1ee9c l\u1eadp tr\u00ecnh Java","potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://gpcoder.com/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"vi"},{"@type":"ImageObject","@id":"https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/#primaryimage","inLanguage":"vi","url":"https://gpcoder.com/wp-content/uploads/2018/08/design-patterns-singleton.png","contentUrl":"https://gpcoder.com/wp-content/uploads/2018/08/design-patterns-singleton.png","width":678,"height":426},{"@type":"WebPage","@id":"https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/#webpage","url":"https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/","name":"H\u01b0\u1edbng d\u1eabn Java Design Pattern - Singleton - GP Coder (L\u1eadp tr\u00ecnh Java)","isPartOf":{"@id":"https://gpcoder.com/#website"},"primaryImageOfPage":{"@id":"https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/#primaryimage"},"datePublished":"2018-09-08T01:00:19+00:00","dateModified":"2020-04-26T14:21:20+00:00","author":{"@id":"https://gpcoder.com/#/schema/person/0b868d4560a27b9e25c7410ae7e7b713"},"description":"Singleton thu\u1ed9c nh\u00f3m Creational Design Pattern. N\u00f3 \u0111\u1ea3m b\u1ea3o ch\u1ec9 duy nh\u1ea5t m\u1ed9t instance \u0111\u01b0\u1ee3c t\u1ea1o ra v\u00e0 cung c\u1ea5p m\u1ed9t method \u0111\u1ec3 c\u00f3 th\u1ec3 truy xu\u1ea5t \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n duy nh\u1ea5t \u0111\u00f3 m\u1ecdi l\u00fac m\u1ecdi n\u01a1i.","breadcrumb":{"@id":"https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/#breadcrumb"},"inLanguage":"vi","potentialAction":[{"@type":"ReadAction","target":["https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/"]}]},{"@type":"BreadcrumbList","@id":"https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https://gpcoder.com/"},{"@type":"ListItem","position":2,"name":"H\u01b0\u1edbng d\u1eabn Java Design Pattern &#8211; Singleton"}]},{"@type":"Person","@id":"https://gpcoder.com/#/schema/person/0b868d4560a27b9e25c7410ae7e7b713","name":"GP Coder","image":{"@type":"ImageObject","@id":"https://gpcoder.com/#personlogo","inLanguage":"vi","url":"https://secure.gravatar.com/avatar/0c50831755c24f3c771d446f1a4adb20?s=96&d=mm&r=g","contentUrl":"https://secure.gravatar.com/avatar/0c50831755c24f3c771d446f1a4adb20?s=96&d=mm&r=g","caption":"GP Coder"},"sameAs":["https://gpcoder.com"]}]}</script> <link rel='dns-prefetch' href='//ajax.googleapis.com' /><link rel='dns-prefetch' href='//www.googletagmanager.com' /><link rel='dns-prefetch' href='//use.fontawesome.com' /><link rel='dns-prefetch' href='//s.w.org' /><link href='https://fonts.gstatic.com' crossorigin='anonymous' rel='preconnect' /><link href='https://ajax.googleapis.com' rel='preconnect' /><link href='https://fonts.googleapis.com' rel='preconnect' /><link rel="alternate" type="application/rss+xml" title="Dòng thông tin GP Coder &raquo;" href="https://gpcoder.com/feed/" /><link rel="alternate" type="application/rss+xml" title="Dòng phản hồi GP Coder &raquo;" href="https://gpcoder.com/comments/feed/" /><link rel="alternate" type="application/rss+xml" title="GP Coder &raquo; Hướng dẫn Java Design Pattern &#8211; Singleton Dòng phản hồi" href="https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/feed/" /><link rel='stylesheet' id='wpsr_fa_icons-css'  href='https://use.fontawesome.com/releases/v5.15.3/css/all.css' type='text/css' media='all' /> <script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js' id='jquery-core-js'></script> <script type='text/javascript' id='easy-facebook-likebox-public-script-js-extra'>var public_ajax = {"ajax_url":"https:\/\/gpcoder.com\/wp-admin\/admin-ajax.php"};
var public_ajax = {"ajax_url":"https:\/\/gpcoder.com\/wp-admin\/admin-ajax.php"};</script> <!--[if lt IE 9]> <script type='text/javascript' src='https://gpcoder.com/wp-content/themes/genesis/lib/js/html5shiv.js' id='html5shiv-js'></script> <![endif]-->  <script type='text/javascript' src='https://www.googletagmanager.com/gtag/js?id=UA-108057558-1' id='google_gtagjs-js' async></script> <script type='text/javascript' id='google_gtagjs-js-after'>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}
gtag('set', 'linker', {"domains":["gpcoder.com"]} );
gtag("js", new Date());
gtag("set", "developer_id.dZTNiMT", true);
gtag("config", "UA-108057558-1", {"anonymize_ip":true});</script> <link rel="https://api.w.org/" href="https://gpcoder.com/wp-json/" /><link rel="alternate" type="application/json" href="https://gpcoder.com/wp-json/wp/v2/posts/4190" /><link rel='shortlink' href='https://gpcoder.com/?p=4190' /><link rel="alternate" type="application/json+oembed" href="https://gpcoder.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fgpcoder.com%2F4190-huong-dan-java-design-pattern-singleton%2F" /><link rel="alternate" type="text/xml+oembed" href="https://gpcoder.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fgpcoder.com%2F4190-huong-dan-java-design-pattern-singleton%2F&#038;format=xml" /><meta property="fb:app_id" content="510733472615500"/><meta property="fb:admins" content="544665492337774"/><meta name="generator" content="Site Kit by Google 1.42.0" /><script type="application/ld+json">{
  "@context": "https://schema.org/",
  "@type": "CreativeWork",
  "name": "Hướng dẫn Java Design Pattern &#8211; Singleton",
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": "4.4",
    "ratingCount": "44",
    "bestRating": "5",
    "worstRating": "1"
  }
}</script> <link rel="icon" href="https://gpcoder.com/wp-content/themes/gp-coder/images/favicon.ico" /><meta name="onesignal" content="wordpress-plugin"/> <script>window.OneSignal = window.OneSignal || [];

      OneSignal.push( function() {
        OneSignal.SERVICE_WORKER_UPDATER_PATH = "OneSignalSDKUpdaterWorker.js.php";
                      OneSignal.SERVICE_WORKER_PATH = "OneSignalSDKWorker.js.php";
                      OneSignal.SERVICE_WORKER_PARAM = { scope: "/" };
        OneSignal.setDefaultNotificationUrl("https://gpcoder.com");
        var oneSignal_options = {};
        window._oneSignalInitOptions = oneSignal_options;

        oneSignal_options['wordpress'] = true;
oneSignal_options['appId'] = '99190402-7466-477c-babf-c83d41077e58';
oneSignal_options['allowLocalhostAsSecureOrigin'] = true;
oneSignal_options['welcomeNotification'] = { };
oneSignal_options['welcomeNotification']['title'] = "GP Coder";
oneSignal_options['welcomeNotification']['message'] = "Cảm ơn đã đăng ký!";
oneSignal_options['welcomeNotification']['url'] = "https://gpcoder.com";
oneSignal_options['path'] = "https://gpcoder.com/wp-content/plugins/onesignal-free-web-push-notifications/sdk_files/";
oneSignal_options['safari_web_id'] = "web.onesignal.auto.32551e0e-3454-416e-9258-23f2fe99c3c8";
oneSignal_options['promptOptions'] = { };
oneSignal_options['promptOptions']['actionMessage'] = "muốn hiển thị thông báo:";
oneSignal_options['promptOptions']['exampleNotificationTitleDesktop'] = "Đây là một thông báo ví dụ";
oneSignal_options['promptOptions']['exampleNotificationMessageDesktop'] = "Thông báo sẽ xuất hiện trên màn hình của bạn";
oneSignal_options['promptOptions']['exampleNotificationTitleMobile'] = "Ví dụ thông báo";
oneSignal_options['promptOptions']['exampleNotificationMessageMobile'] = "Thông báo sẽ xuất hiện trên thiết bị của bạn";
oneSignal_options['promptOptions']['exampleNotificationCaption'] = "(Bạn có thể bỏ đăng ký bất cứ lúc nào)";
oneSignal_options['promptOptions']['acceptButtonText'] = "Tiếp tục";
oneSignal_options['promptOptions']['cancelButtonText'] = "Không, cám ơn";
oneSignal_options['promptOptions']['siteName'] = "https://gpcoder.com";
oneSignal_options['promptOptions']['autoAcceptTitle'] = "Nhấp Cho phép (Allow)";
oneSignal_options['notifyButton'] = { };
oneSignal_options['notifyButton']['enable'] = true;
oneSignal_options['notifyButton']['position'] = 'bottom-left';
oneSignal_options['notifyButton']['theme'] = 'default';
oneSignal_options['notifyButton']['size'] = 'medium';
oneSignal_options['notifyButton']['showCredit'] = true;
oneSignal_options['notifyButton']['text'] = {};
oneSignal_options['notifyButton']['text']['tip.state.unsubscribed'] = 'Hủy đăng ký nhận thông báo';
oneSignal_options['notifyButton']['text']['tip.state.subscribed'] = 'Bạn đã đăng ký nhận thông báo';
oneSignal_options['notifyButton']['text']['tip.state.blocked'] = 'Bạn đã chặn nhận thông báo';
oneSignal_options['notifyButton']['text']['message.action.subscribed'] = 'Cám ơn bạn đã đăng ký!';
oneSignal_options['notifyButton']['text']['message.action.resubscribed'] = 'Bạn đã đăng ký nhận thông báo';
oneSignal_options['notifyButton']['text']['message.action.unsubscribed'] = 'Bạn sẽ không nhận thông báo nữa.';
oneSignal_options['notifyButton']['text']['dialog.main.title'] = 'Quản lý Thông báo Trang web';
oneSignal_options['notifyButton']['text']['dialog.main.button.subscribe'] = 'Đăng ký';
oneSignal_options['notifyButton']['text']['dialog.main.button.unsubscribe'] = 'Hủy đăng ký';
oneSignal_options['notifyButton']['text']['dialog.blocked.title'] = 'Bỏ chặn Thông báo';
oneSignal_options['notifyButton']['text']['dialog.blocked.message'] = 'Làm theo các hướng dẫn sau để cho phép thông báo:';
                OneSignal.init(window._oneSignalInitOptions);
                OneSignal.showSlidedownPrompt();      });

      function documentInitOneSignal() {
        var oneSignal_elements = document.getElementsByClassName("OneSignal-prompt");

        var oneSignalLinkClickHandler = function(event) { OneSignal.push(['registerForPushNotifications']); event.preventDefault(); };        for(var i = 0; i < oneSignal_elements.length; i++)
          oneSignal_elements[i].addEventListener('click', oneSignalLinkClickHandler, false);
      }

      if (document.readyState === 'complete') {
           documentInitOneSignal();
      }
      else {
           window.addEventListener("load", function(event){
               documentInitOneSignal();
          });
      }</script> <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script></head><body class="post-template-default single single-post postid-4190 single-format-standard content-sidebar gp-coder-green" itemscope itemtype="https://schema.org/WebPage"><div class="site-container"><header class="site-header" itemscope itemtype="https://schema.org/WPHeader"><div class="wrap"><div class="title-area"><p class="site-title" itemprop="headline"><a href="https://gpcoder.com/">GP Coder</a></p><p class="site-description" itemprop="description">Trang chia sẻ kiến thức lập trình Java</p></div><div class="widget-area header-widget-area"><section id="adrotate_widgets-2" class="widget adrotate_widgets"><div class="widget-wrap"><div class="a-single a-26"> <ins class="adsbygoogle"
 style="display:block"
 data-ad-format="fluid"
 data-ad-layout-key="-fb+5w+4e-db+86"
 data-ad-client="ca-pub-6685026625685470"
 data-ad-slot="5031012780"></ins> <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></div></section></div></div></header><nav class="nav-secondary" itemscope itemtype="https://schema.org/SiteNavigationElement"><div class="wrap"><ul id="menu-secondary-menu" class="menu genesis-nav-menu menu-secondary"><li id="menu-item-1556" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-1556"><a href="https://gpcoder.com/category/java-core/" itemprop="url"><span itemprop="name">Java Core</span></a><ul class="sub-menu"><li id="menu-item-1560" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1560"><a href="https://gpcoder.com/category/java-core/basic-java/" itemprop="url"><span itemprop="name">Basic Java</span></a></li><li id="menu-item-1565" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1565"><a href="https://gpcoder.com/category/java-core/oop/" itemprop="url"><span itemprop="name">OOP</span></a></li><li id="menu-item-1558" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1558"><a href="https://gpcoder.com/category/java-core/exception-handling/" itemprop="url"><span itemprop="name">Exception Handling</span></a></li><li id="menu-item-1563" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1563"><a href="https://gpcoder.com/category/java-core/multi-thread/" itemprop="url"><span itemprop="name">Multi-Thread</span></a></li><li id="menu-item-1561" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1561"><a href="https://gpcoder.com/category/java-core/java-io/" itemprop="url"><span itemprop="name">Java I/O</span></a></li><li id="menu-item-1564" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1564"><a href="https://gpcoder.com/category/java-core/networking/" itemprop="url"><span itemprop="name">Networking</span></a></li><li id="menu-item-1566" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1566"><a href="https://gpcoder.com/category/java-core/reflection/" itemprop="url"><span itemprop="name">Reflection</span></a></li><li id="menu-item-1557" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1557"><a href="https://gpcoder.com/category/java-core/collection/" itemprop="url"><span itemprop="name">Collection</span></a></li><li id="menu-item-1559" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1559"><a href="https://gpcoder.com/category/java-core/java-8/" itemprop="url"><span itemprop="name">Java 8</span></a></li></ul></li><li id="menu-item-1549" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-has-children menu-item-1549"><a href="https://gpcoder.com/category/design-pattern/" itemprop="url"><span itemprop="name">Design pattern</span></a><ul class="sub-menu"><li id="menu-item-1551" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-1551"><a href="https://gpcoder.com/category/design-pattern/creational-pattern/" itemprop="url"><span itemprop="name">Creational Pattern</span></a></li><li id="menu-item-1552" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1552"><a href="https://gpcoder.com/category/design-pattern/structuaral-pattern/" itemprop="url"><span itemprop="name">Structuaral Pattern</span></a></li><li id="menu-item-1550" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1550"><a href="https://gpcoder.com/category/design-pattern/behavior-pattern/" itemprop="url"><span itemprop="name">Behavior Pattern</span></a></li></ul></li><li id="menu-item-5720" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-5720"><a href="https://gpcoder.com/category/java-webservice/" itemprop="url"><span itemprop="name">Web Service</span></a><ul class="sub-menu"><li id="menu-item-5722" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5722"><a href="https://gpcoder.com/category/java-webservice/soap/" itemprop="url"><span itemprop="name">SOAP</span></a></li><li id="menu-item-5721" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-5721"><a href="https://gpcoder.com/category/java-webservice/rest/" itemprop="url"><span itemprop="name">REST</span></a></li></ul></li><li id="menu-item-6603" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6603"><a href="https://gpcoder.com/category/jpa/" itemprop="url"><span itemprop="name">JPA</span></a></li><li id="menu-item-1571" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-1571"><a href="https://gpcoder.com/category/java-library/" itemprop="url"><span itemprop="name">Java library</span></a><ul class="sub-menu"><li id="menu-item-1574" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1574"><a href="https://gpcoder.com/category/java-library/report/" itemprop="url"><span itemprop="name">Report</span></a></li><li id="menu-item-1572" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1572"><a href="https://gpcoder.com/category/java-library/json/" itemprop="url"><span itemprop="name">Json</span></a></li><li id="menu-item-1575" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-1575"><a href="https://gpcoder.com/category/java-library/unit-test/" itemprop="url"><span itemprop="name">Unit Test</span></a></li></ul></li><li id="menu-item-7255" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-7255"><a href="https://gpcoder.com/category/message-queue/" itemprop="url"><span itemprop="name">Message Queue</span></a><ul class="sub-menu"><li id="menu-item-7256" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-7256"><a href="https://gpcoder.com/tag/activemq/" itemprop="url"><span itemprop="name">ActiveMQ</span></a></li><li id="menu-item-7257" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-7257"><a href="https://gpcoder.com/tag/rabbitmq/" itemprop="url"><span itemprop="name">RabbitMQ</span></a></li></ul></li><li id="menu-item-1826" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1826"><a href="https://gpcoder.com/tat-ca-bai-viet/" itemprop="url"><span itemprop="name">All</span></a></li></ul></div></nav><div class="breadcrumb"><div class="wrap"><span class="breadcrumb-link-wrap" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="https://gpcoder.com/" itemprop="item"><span itemprop="name">Trang chủ</span></a></span> <span class="breadcrumb-link-wrap" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="https://gpcoder.com/category/design-pattern/" itemprop="item"><span itemprop="name">Design pattern</span></a></span> <span class="breadcrumb-link-wrap" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="https://gpcoder.com/category/design-pattern/creational-pattern/" itemprop="item"><span itemprop="name">Creational Pattern</span></a></span> Hướng dẫn Java Design Pattern &#8211; Singleton</div></div><div class="site-inner"><div class="content-sidebar-wrap"><main class="content"><article class="post-4190 post type-post status-publish format-standard has-post-thumbnail category-creational-pattern category-design-pattern tag-creational-design-pattern tag-design-pattern tag-enum entry" itemscope itemtype="https://schema.org/CreativeWork"><header class="entry-header"><h1 class="entry-title" itemprop="headline">Hướng dẫn Java Design Pattern &#8211; Singleton</h1><p class="entry-meta">Đăng vào <time class="entry-time" itemprop="datePublished" datetime="2018-09-08T08:00:19+07:00">08/09/2018</time> Được đăng bởi <span class="entry-author" itemprop="author" itemscope itemtype="https://schema.org/Person"><a href="https://gpcoder.com/author/gpadmin/" class="entry-author-link" itemprop="url" rel="author"><span class="entry-author-name" itemprop="name">GP Coder</span></a></span> <span class="ja_post_view" ><span class="entry-views">45655</span> Lượt xem</span></p></header><div class="entry-content" itemprop="text"><p>Đôi khi, trong quá trình phân tích thiết kế một hệ thống, chúng ta mong muốn có những đối tượng cần tồn tại duy nhất và có thể truy xuất mọi lúc mọi nơi. Làm thế nào để hiện thực được một đối tượng như thế khi xây dựng mã nguồn? Chúng ta có thể nghĩ tới việc sử dụng một biến toàn cục (global variable : public static final). Tuy nhiên, việc sử dụng biến toàn cục nó phá vỡ quy tắc của <strong>OOP (encapsulation)</strong>. Để giải bài toán trên, người ta hướng đến một giải pháp là sử dụng <strong>Singleton pattern</strong>.</p><div id="toc_container" class="no_bullets"><p class="toc_title">Nội dung</p><ul class="toc_list"><li><a href="#Singleton_Pattern_la_gi"><span class="toc_number toc_depth_1">1</span> Singleton Pattern là gì?</a></li><li><a href="#Implement_Singleton_Pattern_nhu_the_nao"><span class="toc_number toc_depth_1">2</span> Implement Singleton Pattern như thế nào?</a></li><li><a href="#Nhung_cach_nao_de_implement_Singleton_Pattern"><span class="toc_number toc_depth_1">3</span> Những cách nào để implement Singleton Pattern</a><ul><li><a href="#Eager_initialization"><span class="toc_number toc_depth_2">3.1</span> Eager initialization</a></li><li><a href="#Static_block_initialization"><span class="toc_number toc_depth_2">3.2</span> Static block initialization</a></li><li><a href="#Lazy_Initialization"><span class="toc_number toc_depth_2">3.3</span> Lazy Initialization</a></li><li><a href="#Thread_Safe_Singleton"><span class="toc_number toc_depth_2">3.4</span> Thread Safe Singleton</a></li><li><a href="#Double_Check_Locking_Singleton"><span class="toc_number toc_depth_2">3.5</span> Double Check Locking Singleton</a></li><li><a href="#Bill_Pugh_Singleton_Implementation"><span class="toc_number toc_depth_2">3.6</span> Bill Pugh Singleton Implementation</a></li><li><a href="#Pha_vo_cau_truc_Singleton_Pattern_bang_Reflection"><span class="toc_number toc_depth_2">3.7</span> Phá vỡ cấu trúc Singleton Pattern bằng Reflection</a></li><li><a href="#Enum_Singleton"><span class="toc_number toc_depth_2">3.8</span> Enum Singleton</a></li><li><a href="#Serialization_and_Singleton"><span class="toc_number toc_depth_2">3.9</span> Serialization and Singleton</a></li></ul></li><li><a href="#Su_dung_Singleton_Pattern_khi_nao"><span class="toc_number toc_depth_1">4</span> Sử dụng Singleton Pattern khi nào?</a></li><li><a href="#Tong_ket"><span class="toc_number toc_depth_1">5</span> Tổng kết</a></li></ul></div><h2><span id="Singleton_Pattern_la_gi">Singleton Pattern là gì?</span></h2><blockquote><p><a href="https://en.wikipedia.org/wiki/Singleton_pattern" class="external" rel="nofollow"><strong>Singleton</strong></a> is a creational design pattern that lets you ensure that a class has only one instance and provide a global access point to this instance.</p></blockquote><p><strong>Singleton</strong> là 1 trong 5 design pattern của nhóm <strong>Creational Design Pattern</strong>.</p><p><strong>Singleton</strong> đảm bảo chỉ duy nhất <strong>một thể hiện (instance)</strong> được tạo ra và nó sẽ cung cấp cho bạn một method để có thể truy xuất được thể hiện duy nhất đó mọi lúc mọi nơi trong chương trình.</p><p><a href="https://gpcoder.com/wp-content/uploads/2018/09/singleton-pattern.png" data-slb-active="1" data-slb-asset="1297517501" data-slb-internal="0" data-slb-group="4190"><img loading="lazy" class="lazy lazy-hidden size-full wp-image-4341 aligncenter" src="//gpcoder.com/wp-content/plugins/a3-lazy-load/assets/images/lazy_placeholder.gif" data-lazy-type="image" data-src="https://gpcoder.com/wp-content/uploads/2018/09/singleton-pattern.png" alt="" width="259" height="194" /><noscript><img loading="lazy" class="size-full wp-image-4341 aligncenter" src="https://gpcoder.com/wp-content/uploads/2018/09/singleton-pattern.png" alt="" width="259" height="194" /></noscript></a></p><p>Sử dụng Singleton khi chúng ta muốn:</p><ul><li>Đảm bảo rằng chỉ có một instance của lớp.</li><li>Việc quản lý việc truy cập tốt hơn vì chỉ có một thể hiện duy nhất.</li><li>Có thể quản lý số lượng thể hiện của một lớp trong giớn hạn chỉ định.</li></ul><h2><span id="Implement_Singleton_Pattern_nhu_the_nao">Implement Singleton Pattern như thế nào?</span></h2><p>Có rất nhiều cách để implement Singleton Pattern. Nhưng dù cho việc implement bằng cách nào đi nữa cũng dựa vào nguyên tắc dưới đây cơ bản dưới đây:</p><ul><li><strong>private constructor</strong> để hạn chế truy cập từ class bên ngoài.</li><li>Đặt <strong>private static final variable</strong> đảm bảo biến chỉ được khởi tạo trong class.</li><li>Có một method <strong>public static</strong> để <strong>return instance</strong> được khởi tạo ở trên.</li></ul><h2><span id="Nhung_cach_nao_de_implement_Singleton_Pattern">Những cách nào để implement Singleton Pattern</span></h2><p>Dựa trên những nguyên tắc thiết kế Singleton ở trên, chúng ta có các cách implement singleton như sau:</p><h3><span id="Eager_initialization">Eager initialization</span></h3><p><strong>Singleton</strong> Class được khởi tạo ngay khi được gọi đến. Đây là cách dễ nhất nhưng nó có một nhược điểm mặc dù instance đã được khởi tạo mà có thể sẽ không dùng tới.</p><p>Ví dụ:</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

public class EagerInitializedSingleton {

	private static final EagerInitializedSingleton INSTANCE = new EagerInitializedSingleton();

	// Private constructor to avoid client applications to use constructor
	private EagerInitializedSingleton() {
		
	}

	public static EagerInitializedSingleton getInstance() {
		return INSTANCE;
	}
}

</pre><p>Eager initialization là cách tiếp cận tốt, dễ cài đặt, tuy nhiên, nó dễ dàng bị phá vỡ bởi Reflection.</p><h3><span id="Static_block_initialization">Static block initialization</span></h3><p>Cách làm tương tự như <strong>Eager initialization</strong> chỉ khác phần <strong>static block</strong> cung cấp thêm lựa chọn cho việc handle exception hay các xử lý khác.</p><p>Ví dụ:</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

public class StaticBlockSingleton {

	private static final StaticBlockSingleton INSTANCE;

	private StaticBlockSingleton() {
	}

	// Static block initialization for exception handling
	static {
		try {
			INSTANCE = new StaticBlockSingleton();
		} catch (Exception e) {
			throw new RuntimeException(&quot;Exception occured in creating singleton instance&quot;);
		}
	}

	public static StaticBlockSingleton getInstance() {
		return INSTANCE;
	}
}

</pre><h3><span id="Lazy_Initialization">Lazy Initialization</span></h3><p>Là một cách làm mang tính mở rộng hơn so với 2 cách làm trên và hoạt động tốt trong môi trường đơn luồng (single-thread).</p><p>Ví dụ:</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

public class LazyInitializedSingleton {

	private static LazyInitializedSingleton instance;

	private LazyInitializedSingleton() {
	}

	public static LazyInitializedSingleton getInstance() {
		if (instance == null) {
			instance = new LazyInitializedSingleton();
		}
		return instance;
	}
}

</pre><p>Cách này đã khắc phục được nhược điểm của cách <strong>Eager initialization</strong>, chỉ khi nào <strong>getInstance()</strong> được gọi thì instance mới được khởi tạo. Tuy nhiên, cách này chỉ sử dụng tốt trong trường hợp đơn luồng (single-thread), trường hợp nếu có nhiều luồng (multi-thread) cùng chạy và cùng gọi hàm getInstance() tại cùng một thời điểm thì có thể có nhiều hơn 1 thể hiện của instance. Để khắc phục nhược điểm này chúng ta sử dụng <strong>Thread Safe Singleton</strong>.</p><p>Một nhược điểm nữa của <strong>Lazy Initialization</strong> cần quan tâm là: đối với thao tác create instance quá chậm thì người dùng có phải chờ lâu cho lần sử dụng đầu tiên.</p><h3><span id="Thread_Safe_Singleton">Thread Safe Singleton</span></h3><p>Cách đơn giản nhất là chúng ta gọi phương thức <strong>synchronized</strong> của hàm <strong>getInstance()</strong> và như vậy hệ thống đảm bảo rằng tại cùng một thời điểm chỉ có thể có 1 luồng có thể truy cập vào hàm getInstance() và đảm bảo rằng chỉ có duy nhất 1 thể hiện của class.</p><p>Ví dụ:</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

public class ThreadSafeLazyInitializedSingleton {

	private static volatile ThreadSafeLazyInitializedSingleton instance;

	private ThreadSafeLazyInitializedSingleton() {
	}

	public static synchronized ThreadSafeLazyInitializedSingleton getInstance() {
		if (instance == null) {
			instance = new ThreadSafeLazyInitializedSingleton();
		}
		return instance;
	}
}

</pre><blockquote><p>Biến <strong>volatile</strong> trong Java có tác dụng thông báo sự thay đổi giá trị của biến tới các thread khác nhau nếu biến này đang được sử dụng trong nhiều thread.</p></blockquote><p>Cách này có nhược điểm là một phương thức <strong>synchronized</strong> sẽ chạy rất chậm và tốn hiệu năng, bất kỳ Thread nào gọi đến đều phải chờ nếu có một Thread khác đang sử dụng. Có những tác vụ xử lý trước và sau khi tạo thể hiện không cần thiết phải block. Vì vậy chúng ta cần cải tiến nó đi 1 chút với <strong>Double Check Locking Singleton</strong>.</p><h3><span id="Double_Check_Locking_Singleton">Double Check Locking Singleton</span></h3><p>Để implement theo cách này, chúng ta sẽ kiểm tra sự tồn tại thể hiện của lớp, với sự hổ trợ của đồng bộ hóa, hai lần trước khi khởi tạo. Phải khai báo <strong>volatile</strong> cho instance để tránh lớp làm việc không chính xác do quá trình tối ưu hóa của trình biên dịch.</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

public class DoubleCheckLockingSingleton {

	private static volatile DoubleCheckLockingSingleton instance;

	private DoubleCheckLockingSingleton() {
	}

	public static DoubleCheckLockingSingleton getInstance() {
		// Do something before get instance ...
		if (instance == null) {
			// Do the task too long before create instance ...
			// Block so other threads cannot come into while initialize
			synchronized (DoubleCheckLockingSingleton.class) {
				// Re-check again. Maybe another thread has initialized before
				if (instance == null) {
					instance = new DoubleCheckLockingSingleton();
				}
			}
		}
		// Do something after get instance ...
		return instance;
	}
}

</pre><h3><span id="Bill_Pugh_Singleton_Implementation">Bill Pugh Singleton Implementation</span></h3><p>Với cách làm này bạn sẽ tạo ra <strong>static nested class</strong> với vai trò 1 Helper khi muốn tách biệt chức năng cho 1 class function rõ ràng hơn. Đây là cách thường hay được sử dụng và có hiệu suất tốt (theo các chuyên gia đánh giá &#x1f642; ).</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

public class BillPughSingleton {

	private BillPughSingleton() {
	}

	public static BillPughSingleton getInstance() {
		return SingletonHelper.INSTANCE;
	}

	private static class SingletonHelper {
		private static final BillPughSingleton INSTANCE = new BillPughSingleton();
	}
}

</pre><p>Khi Singleton được tải vào bộ nhớ thì SingletonHelper chưa được tải vào. Nó chỉ được tải khi và chỉ khi phương thức getInstance() được gọi. Với cách này tránh được lỗi cơ chế khởi tạo instance của Singleton trong Multi-Thread, performance cao do tách biệt được quá trình xử lý. Do đó, cách làm này được đánh giá là cách triển khai Singleton nhanh và hiệu quả nhất.</p><h3><span id="Pha_vo_cau_truc_Singleton_Pattern_bang_Reflection">Phá vỡ cấu trúc Singleton Pattern bằng Reflection</span></h3><p><strong>Reflection</strong> có thể được dùng để phá vỡ Pattern của <strong>Eager Initialization</strong> ở trên. Ví dụ:</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;

public class ReflectionBreakSingleton {

	public static void main(String[] args)
			throws InstantiationException, IllegalAccessException, InvocationTargetException {
		
		EagerInitializedSingleton instanceOne = EagerInitializedSingleton.getInstance();
		EagerInitializedSingleton instanceTwo = null;

		Constructor&lt;?&gt;[] constructors = EagerInitializedSingleton.class.getDeclaredConstructors();
		for (Constructor&lt;?&gt; constructor : constructors) {
			constructor.setAccessible(true);
			instanceTwo = (EagerInitializedSingleton) constructor.newInstance();
		}

		System.out.println(instanceOne.hashCode());
		System.out.println(instanceTwo.hashCode());
	}
}

</pre><p>Output của chương trình:</p><pre class="brush: java; title: ; notranslate" title="">

2018699554
1311053135

</pre><p>Tương tự <strong>Eager Initialization</strong>, implement theo <strong>Bill Pugh Singleton</strong> cũng bị break bởi Reflection.</p><h3><span id="Enum_Singleton">Enum Singleton</span></h3><p>Khi dùng <strong>enum</strong> thì các params chỉ được khởi tạo 1 lần duy nhất, đây cũng là cách giúp bạn tạo ra Singleton instance.</p><p>Ví dụ:</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

/**
 * Singleton implementation using enum initialization
 */
public enum EnumSingleton {

	INSTANCE;
}

</pre><p>Lưu ý:</p><ul><li>Enum có thể sử dụng như một Singleton, nhưng nó có nhược điểm là không thể extends từ một lớp được, nên khi sử dụng cần xem xét vấn đề này.</li><li>Hàm <strong>constructor</strong> của <strong>enum</strong> là <strong>lazy</strong>, nghĩa là khi được sử dụng mới chạy hàm khởi tạo và nó chỉ chạy duy nhất một lần. Nếu muốn sử dụng như một eager singleton thì cần gọi thực thi trong một <strong>static block</strong> khi start chương trình.</li></ul><p>So sánh giữa 2 cách sử dụng <strong>enum initialization</strong> và <strong>static block initialization</strong> <strong>method</strong>, enum có một điểm rất mạnh khi giải quyết về vấn đề <strong>Serialization/ Deserialization</strong>.</p><h3><span id="Serialization_and_Singleton">Serialization and Singleton</span></h3><p>Đôi khi trong các hệ thống phân tán (distributed system), chúng ta cần implement interface <strong>Serializable</strong> trong lớp Singleton để chúng ta có thể lưu trữ trạng thái của nó trong file hệ thống và truy xuất lại nó sau.</p><p>Ví dụ:</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

import java.io.ObjectStreamException;
import java.io.Serializable;

public class SerializedSingleton implements Serializable {

	private static final long serialVersionUID = 1741825395699241705L;

	private SerializedSingleton() {
	}

	private static class SingletonHelper {
		private static final SerializedSingleton instance = new SerializedSingleton();
	}

	public static SerializedSingleton getInstance() {
		return SingletonHelper.instance;
	}
	
	/**
     * Special hook provided by serialization where developer can control what object needs to sent.
     * However this method is invoked on the new object instance created by de serialization process.
     *
     * @return
     * @throws ObjectStreamException
     */
//    private Object readResolve() throws ObjectStreamException {
//        return SingletonHelper.instance;
//    }

}

</pre><p>Đoạn code test quá trình Serialize/ Deserialize:</p><pre class="brush: java; title: ; notranslate" title="">

package com.gpcoder.patterns.creational.singleton;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;

public class SingletonSerializedTest {

	public static void main(String[] args) throws FileNotFoundException, IOException, ClassNotFoundException {

		SerializedSingleton serializedSingleton1 = SerializedSingleton.getInstance();
		EnumSingleton enumSingleton1 = EnumSingleton.INSTANCE;

		ObjectOutput out = new ObjectOutputStream(new FileOutputStream(&quot;SingletonSerializedTest.txt&quot;));
		out.writeObject(serializedSingleton1);
		out.writeObject(enumSingleton1);
		out.close();

		// De-serialize from file to object
		ObjectInput in = new ObjectInputStream(new FileInputStream(&quot;SingletonSerializedTest.txt&quot;));
		SerializedSingleton serializedSingleton2 = (SerializedSingleton) in.readObject();
		EnumSingleton enumSingleton2 = (EnumSingleton) in.readObject();
		in.close();

		System.out.println(&quot;serializedSingleton1 hashCode=&quot; + serializedSingleton1.hashCode());
		System.out.println(&quot;serializedSingleton2 hashCode=&quot; + serializedSingleton2.hashCode());
		System.out.println(&quot;enumSingleton1 hashCode=&quot; + enumSingleton1.hashCode());
		System.out.println(&quot;enumSingleton2 hashCode=&quot; + enumSingleton2.hashCode());
	}
}

</pre><p>Output của chương trình:</p><pre class="brush: java; title: ; notranslate" title="">

serializedSingleton1 hashCode=1028566121
serializedSingleton2 hashCode=1747585824
enumSingleton1 hashCode=1118140819
enumSingleton2 hashCode=1118140819

</pre><p>Như trong ví dụ trên, <strong>Deserialize</strong> đối tượng của <strong>SerializedSingleton</strong> khác với đối tượng gốc. Tuy nhiên vấn đề này không xảy ra khi sử dụng <strong>enum</strong>.</p><p>Thực tế thì vẫn có cách khắc phục khi sử dụng class SerializedSingleton là implement một phương thức <strong>readResolve()</strong>. Nhưng khi chúng ta thật sự gặp vấn đề và cần sử dụng Serialize/ Deserialize, thì nên sử dụng <strong>enum</strong> sẽ đơn giản hơn.</p><h2><span id="Su_dung_Singleton_Pattern_khi_nao">Sử dụng Singleton Pattern khi nào?</span></h2><p>Dưới đây là một số trường hợp sử dụng của Singleton Pattern thường gặp:</p><ul><li>Vì class dùng Singleton chỉ tồn tại 1 Instance (thể hiện) nên nó thường được dùng cho các trường hợp giải quyết các bài toán cần truy cập vào các ứng dụng như: Shared resource, Logger, Configuration, Caching, Thread pool, &#8230;</li><li>Một số design pattern khác cũng sử dụng Singleton để triển khai: Abstract Factory, Builder, Prototype, Facade,…</li><li>Đã được sử dụng trong một số class của core java như: java.lang.Runtime, java.awt.Desktop.</li></ul><h2><span id="Tong_ket">Tổng kết</span></h2><p>Có rất nhiều cách implement cho Singleton, mình thường sử dụng <strong>BillPughSingleton</strong> vì có hiệu suất cao, sử dụng <strong>LazyInitializedSingleton</strong> cho những ứng dụng chỉ làm việc với ứng dụng <strong>single-thread</strong> và sử dụng <strong>DoubleCheckLockingSingleton</strong> khi làm việc với ứng dụng <strong>multi-thread</strong>. Tùy theo trường hợp cụ thể, bạn hãy chọn cho mình cách implement phù hợp.</p><p> <ins class="adsbygoogle"
 style="display:block"
 data-ad-format="fluid"
 data-ad-layout-key="-gw-3+1f-3d+2z"
 data-ad-client="ca-pub-6685026625685470"
 data-ad-slot="2913704343"></ins> <script>(adsbygoogle = window.adsbygoogle || []).push({});</script><strong>Tài liệu tham khảo:</strong></p><ul><li><a href="https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples" class="external" rel="nofollow">https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples</a></li><li><a href="https://community.oracle.com/docs/DOC-918906" class="external" rel="nofollow">https://community.oracle.com/docs/DOC-918906</a></li><li><a href="https://www.geeksforgeeks.org/prevent-singleton-pattern-reflection-serialization-cloning/" class="external" rel="nofollow">https://www.geeksforgeeks.org/prevent-singleton-pattern-reflection-serialization-cloning/</a></li><li><a href="http://www.java67.com/2015/09/thread-safe-singleton-in-java-using-double-checked-locking-pattern.html" class="external" rel="nofollow">http://www.java67.com/2015/09/thread-safe-singleton-in-java-using-double-checked-locking-pattern.html</a></li><li><a href="http://www.javacreed.com/the-broken-singleton/" class="external" rel="nofollow">http://www.javacreed.com/the-broken-singleton/</a></li></ul><div id="gtx-trans" style="position: absolute; left: 687px; top: 6288.5px;"><div class="gtx-trans-icon"></div></div><div data-id="4190" data-score="4.4" data-count="44"
 style="display:none;"
 class="kk-star-ratings  kksr-bottom kksr-left"><div class="kksr-legend" style="line-height:22px;font-size:14.666666666667px"><div class="kksr-legend-score">4.4</div><div class="kksr-legend-meta">44</div></div><div class="kksr-stars"><div class="kksr-inactive-stars"><div data-star="1" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div><div data-star="2" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div><div data-star="3" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div><div data-star="4" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div><div data-star="5" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div></div><div class="kksr-active-stars" style="width: 114.4px;"><div data-star="1" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div><div data-star="2" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div><div data-star="3" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div><div data-star="4" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div><div data-star="5" class="kksr-star"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"> <path d="M12 .587l3.668 7.568L24 9.306l-6.064 5.828 1.48 8.279L12 19.446l-7.417 3.967 1.481-8.279L0 9.306l8.332-1.151z"/> </svg></div></div></div></div><div class="wp-socializer wpsr-share-icons " data-lg-action="show" data-sm-action="show" data-sm-width="768" ><b>Nếu bạn thấy hay thì hãy chia sẻ bài viết cho mọi người nhé!</b><br/><br/><div class="wpsr-si-inner"><div class="wpsr-counter wpsrc-sz-32px" style="color:#000"><span class="scount" data-wpsrs="https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" data-wpsrs-svcs="facebook,linkedin,pdf"><i class="fa fa-share-alt" aria-hidden="true"></i></span><small class="stext">Shares</small></div><div class="socializer sr-popup sr-32px sr-circle sr-opacity sr-pad sr-count-1"><span class="sr-facebook"><a rel="nofollow" href="https://www.facebook.com/share.php?u=https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" target="_blank"  title="Share this on Facebook"  style="color: #ffffff"  class="external"><i class="fab fa-facebook-f"></i><span class="ctext" data-wpsrs="https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" data-wpsrs-svcs="facebook"></span></a></span> <span class="sr-linkedin"><a rel="nofollow" href="https://www.linkedin.com/sharing/share-offsite/?url=https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" target="_blank"  title="Add this to LinkedIn"  style="color: #ffffff"  class="external"><i class="fab fa-linkedin-in"></i></a></span> <span class="sr-pdf"><a rel="nofollow" href="https://www.printfriendly.com/print?url=https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" target="_blank"  title="Convert to PDF"  style="color: #ffffff"  class="external"><i class="fa fa-file-pdf"></i></a></span></div></div></div><p class="entry-meta"><span class="entry-categories">Chuyên mục: <a href="https://gpcoder.com/category/design-pattern/creational-pattern/" rel="category tag">Creational Pattern</a>, <a href="https://gpcoder.com/category/design-pattern/" rel="category tag">Design pattern</a></span> <span class="entry-tags">Được gắn thẻ: <a href="https://gpcoder.com/tag/creational-design-pattern/" rel="tag">Creational Design Pattern</a>, <a href="https://gpcoder.com/tag/design-pattern/" rel="tag">Design pattern</a>, <a href="https://gpcoder.com/tag/enum/" rel="tag">Enum</a></span></p><div class="prev-next-navigation"><a href="https://gpcoder.com/4164-gioi-thieu-design-patterns/" rel="prev"><div class="previous">Giới thiệu Design Patterns</div></a><a href="https://gpcoder.com/4352-huong-dan-java-design-pattern-factory-method/" rel="next"><div class="next">Hướng dẫn Java Design Pattern &#8211; Factory Method</div></a></div><div class="related-posts"><h3>Có thể bạn muốn xem:</h3><ul><li><a href="https://gpcoder.com/4352-huong-dan-java-design-pattern-factory-method/" rel="bookmark" title="Hướng dẫn Java Design Pattern &#8211; Factory Method">Hướng dẫn Java Design Pattern &#8211; Factory Method</a> <span class="entry-time">(12/09/2018)</span></li><li><a href="https://gpcoder.com/4574-huong-dan-java-design-pattern-decorator/" rel="bookmark" title="Hướng dẫn Java Design Pattern – Decorator">Hướng dẫn Java Design Pattern – Decorator</a> <span class="entry-time">(08/11/2018)</span></li><li><a href="https://gpcoder.com/4747-huong-dan-java-design-pattern-observer/" rel="bookmark" title="Hướng dẫn Java Design Pattern – Observer">Hướng dẫn Java Design Pattern – Observer</a> <span class="entry-time">(28/12/2018)</span></li><li><a href="https://gpcoder.com/4434-huong-dan-java-design-pattern-builder/" rel="bookmark" title="Hướng dẫn Java Design Pattern &#8211; Builder">Hướng dẫn Java Design Pattern &#8211; Builder</a> <span class="entry-time">(26/09/2018)</span></li><li><a href="https://gpcoder.com/4935-huong-dan-java-design-pattern-dao/" rel="bookmark" title="Hướng dẫn Java Design Pattern – DAO">Hướng dẫn Java Design Pattern – DAO</a> <span class="entry-time">(17/01/2019)</span></li></ul></div><h3>Bình luận</h3><p><fb:comments-count href=https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/></fb:comments-count> bình luận</p><div class="fb-comments" data-href="https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" data-numposts="5" data-width="100%" data-colorscheme="light"></div></div><footer class="entry-footer"></footer></article><div class="after-entry widget-area"><section id="adrotate_widgets-5" class="widget adrotate_widgets"><div class="widget-wrap"></div></section></div></main><aside class="sidebar sidebar-primary widget-area" role="complementary" aria-label="Primary Sidebar" itemscope itemtype="https://schema.org/WPSideBar"><section id="search-4" class="widget widget_search"><div class="widget-wrap"><h4 class="widget-title widgettitle">Tìm kiếm</h4><form class="search-form" itemprop="potentialAction" itemscope itemtype="https://schema.org/SearchAction" method="get" action="https://gpcoder.com/" role="search"><meta itemprop="target" content="https://gpcoder.com/?s={s}"/><input itemprop="query-input" type="search" name="s" placeholder="Từ khóa &#x2026;" /><input type="submit" value="Tìm"  /></form></div></section><section id="easy_facebook_page_plugin-2" class="widget widget_easy_facebook_page_plugin"><div class="widget-wrap"><div id="fb-root"></div> <script>(function(d, s, id) {
					  var js, fjs = d.getElementsByTagName(s)[0];
					  if (d.getElementById(id)) return;
					  js = d.createElement(s); js.id = id;
					  js.async=true; 
					  js.src = "//connect.facebook.net/vi_VN/all.js#xfbml=1&appId=510733472615500";
					  fjs.parentNode.insertBefore(js, fjs);
					}(document, 'script', 'facebook-jssdk'));</script> <div class="efbl-like-box 1"> <img class="lazy lazy-hidden efbl-loader" src="//gpcoder.com/wp-content/plugins/a3-lazy-load/assets/images/lazy_placeholder.gif" data-lazy-type="image" data-src="https://gpcoder.com/wp-content/plugins/easy-facebook-likebox/public/assets/images/loader.gif" ><noscript><img class="efbl-loader" src="https://gpcoder.com/wp-content/plugins/easy-facebook-likebox/public/assets/images/loader.gif" ></noscript><div class="fb-page" data-animclass="fadeIn " data-href="https://www.facebook.com/GPCoder" data-hide-cover=false data-width="" data-height="" data-show-facepile=true  data-show-posts=false data-adapt-container-width=true data-hide-cta=false data-small-header="true"></div></div></div></section><section id="recent-posts-5" class="widget widget_recent_entries"><div class="widget-wrap"><h4 class="widget-title widgettitle">Bài viết mới</h4><ul><li> <a href="https://gpcoder.com/7219-gioi-thieu-cloudamqp-mot-rabbitmq-server-tren-cloud/">Giới thiệu CloudAMQP &#8211; Một RabbitMQ server trên Cloud</a> <span class="post-date">02/10/2020</span></li><li> <a href="https://gpcoder.com/7167-ket-noi-rabbitmq-su-dung-web-stomp-plugin/">Kết nối RabbitMQ sử dụng Web STOMP Plugin</a> <span class="post-date">19/06/2020</span></li><li> <a href="https://gpcoder.com/6947-su-dung-publisher-confirm-trong-rabbitmq/">Sử dụng publisher confirm trong RabbitMQ</a> <span class="post-date">16/06/2020</span></li><li> <a href="https://gpcoder.com/7095-su-dung-dead-letter-exchange-trong-rabbitmq/">Sử dụng Dead Letter Exchange trong RabbitMQ</a> <span class="post-date">13/06/2020</span></li><li> <a href="https://gpcoder.com/6944-alternate-exchange-trong-rabbitmq/">Sử dụng Alternate Exchange trong RabbitMQ</a> <span class="post-date">10/06/2020</span></li></ul></div></section><section id="adrotate_widgets-3" class="widget adrotate_widgets"><div class="widget-wrap"><div class="a-single a-21"> <ins class="adsbygoogle"
 style="display:block"
 data-ad-client="ca-pub-6685026625685470"
 data-ad-slot="1587168470"
 data-ad-format="auto"
 data-full-width-responsive="true"></ins> <script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></div></section><section id="gp-mostview" class="widget widget_mostview_entries"><div class="widget-wrap"><h4 class="widget-title widgettitle"> Xem nhiều</h4><ul><li> <a href="https://gpcoder.com/3484-lap-trinh-da-luong-trong-java-java-multi-threading/" title="Lập trình đa luồng trong Java (Java Multi-threading)"> Lập trình đa luồng trong Java (Java Multi-threading) <span class="entry-meta"> (48114 lượt xem)</span> </a></li><li> <a href="https://gpcoder.com/4352-huong-dan-java-design-pattern-factory-method/" title="Hướng dẫn Java Design Pattern &#8211; Factory Method"> Hướng dẫn Java Design Pattern &#8211; Factory Method <span class="entry-meta"> (47087 lượt xem)</span> </a></li><li> <a href="https://gpcoder.com/3679-xay-dung-ung-dung-client-server-voi-socket-trong-java/" title="Xây dựng ứng dụng Client-Server với Socket trong Java"> Xây dựng ứng dụng Client-Server với Socket trong Java <span class="entry-meta"> (46205 lượt xem)</span> </a></li><li> <a href="https://gpcoder.com/4190-huong-dan-java-design-pattern-singleton/" title="Hướng dẫn Java Design Pattern &#8211; Singleton"> Hướng dẫn Java Design Pattern &#8211; Singleton <span class="entry-meta"> (45655 lượt xem)</span> </a></li><li> <a href="https://gpcoder.com/4164-gioi-thieu-design-patterns/" title="Giới thiệu Design Patterns"> Giới thiệu Design Patterns <span class="entry-meta"> (41970 lượt xem)</span> </a></li></ul></div></section><section id="toc-widget-2" class="widget toc_widget"><div class="widget-wrap"><h4 class="widget-title widgettitle">Nội dung bài viết</h4><ul class="toc_widget_list no_bullets"><li><a href="#Singleton_Pattern_la_gi"><span class="toc_number toc_depth_1">1</span> Singleton Pattern là gì?</a></li><li><a href="#Implement_Singleton_Pattern_nhu_the_nao"><span class="toc_number toc_depth_1">2</span> Implement Singleton Pattern như thế nào?</a></li><li><a href="#Nhung_cach_nao_de_implement_Singleton_Pattern"><span class="toc_number toc_depth_1">3</span> Những cách nào để implement Singleton Pattern</a><ul><li><a href="#Eager_initialization"><span class="toc_number toc_depth_2">3.1</span> Eager initialization</a></li><li><a href="#Static_block_initialization"><span class="toc_number toc_depth_2">3.2</span> Static block initialization</a></li><li><a href="#Lazy_Initialization"><span class="toc_number toc_depth_2">3.3</span> Lazy Initialization</a></li><li><a href="#Thread_Safe_Singleton"><span class="toc_number toc_depth_2">3.4</span> Thread Safe Singleton</a></li><li><a href="#Double_Check_Locking_Singleton"><span class="toc_number toc_depth_2">3.5</span> Double Check Locking Singleton</a></li><li><a href="#Bill_Pugh_Singleton_Implementation"><span class="toc_number toc_depth_2">3.6</span> Bill Pugh Singleton Implementation</a></li><li><a href="#Pha_vo_cau_truc_Singleton_Pattern_bang_Reflection"><span class="toc_number toc_depth_2">3.7</span> Phá vỡ cấu trúc Singleton Pattern bằng Reflection</a></li><li><a href="#Enum_Singleton"><span class="toc_number toc_depth_2">3.8</span> Enum Singleton</a></li><li><a href="#Serialization_and_Singleton"><span class="toc_number toc_depth_2">3.9</span> Serialization and Singleton</a></li></ul></li><li><a href="#Su_dung_Singleton_Pattern_khi_nao"><span class="toc_number toc_depth_1">4</span> Sử dụng Singleton Pattern khi nào?</a></li><li><a href="#Tong_ket"><span class="toc_number toc_depth_1">5</span> Tổng kết</a></li></ul></div></section><section id="archives-3" class="widget widget_archive"><div class="widget-wrap"><h4 class="widget-title widgettitle">Lưu trữ</h4> <label class="screen-reader-text" for="archives-dropdown-3">Lưu trữ</label> <select id="archives-dropdown-3" name="archive-dropdown"><option value="">Chọn tháng</option><option value='https://gpcoder.com/date/2020/10/'> Tháng Mười 2020</option><option value='https://gpcoder.com/date/2020/06/'> Tháng Sáu 2020</option><option value='https://gpcoder.com/date/2020/05/'> Tháng Năm 2020</option><option value='https://gpcoder.com/date/2020/04/'> Tháng Tư 2020</option><option value='https://gpcoder.com/date/2020/03/'> Tháng Ba 2020</option><option value='https://gpcoder.com/date/2020/02/'> Tháng Hai 2020</option><option value='https://gpcoder.com/date/2020/01/'> Tháng Một 2020</option><option value='https://gpcoder.com/date/2019/12/'> Tháng Mười Hai 2019</option><option value='https://gpcoder.com/date/2019/11/'> Tháng Mười Một 2019</option><option value='https://gpcoder.com/date/2019/10/'> Tháng Mười 2019</option><option value='https://gpcoder.com/date/2019/09/'> Tháng Chín 2019</option><option value='https://gpcoder.com/date/2019/08/'> Tháng Tám 2019</option><option value='https://gpcoder.com/date/2019/07/'> Tháng Bảy 2019</option><option value='https://gpcoder.com/date/2019/06/'> Tháng Sáu 2019</option><option value='https://gpcoder.com/date/2019/05/'> Tháng Năm 2019</option><option value='https://gpcoder.com/date/2019/04/'> Tháng Tư 2019</option><option value='https://gpcoder.com/date/2019/03/'> Tháng Ba 2019</option><option value='https://gpcoder.com/date/2019/02/'> Tháng Hai 2019</option><option value='https://gpcoder.com/date/2019/01/'> Tháng Một 2019</option><option value='https://gpcoder.com/date/2018/12/'> Tháng Mười Hai 2018</option><option value='https://gpcoder.com/date/2018/11/'> Tháng Mười Một 2018</option><option value='https://gpcoder.com/date/2018/10/'> Tháng Mười 2018</option><option value='https://gpcoder.com/date/2018/09/'> Tháng Chín 2018</option><option value='https://gpcoder.com/date/2018/08/'> Tháng Tám 2018</option><option value='https://gpcoder.com/date/2018/07/'> Tháng Bảy 2018</option><option value='https://gpcoder.com/date/2018/06/'> Tháng Sáu 2018</option><option value='https://gpcoder.com/date/2018/05/'> Tháng Năm 2018</option><option value='https://gpcoder.com/date/2018/04/'> Tháng Tư 2018</option><option value='https://gpcoder.com/date/2018/03/'> Tháng Ba 2018</option><option value='https://gpcoder.com/date/2018/02/'> Tháng Hai 2018</option><option value='https://gpcoder.com/date/2018/01/'> Tháng Một 2018</option><option value='https://gpcoder.com/date/2017/12/'> Tháng Mười Hai 2017</option><option value='https://gpcoder.com/date/2017/11/'> Tháng Mười Một 2017</option><option value='https://gpcoder.com/date/2017/10/'> Tháng Mười 2017</option> </select> <script type="text/javascript">(function() {
	var dropdown = document.getElementById( "archives-dropdown-3" );
	function onSelectChange() {
		if ( dropdown.options[ dropdown.selectedIndex ].value !== '' ) {
			document.location.href = this.options[ this.selectedIndex ].value;
		}
	}
	dropdown.onchange = onSelectChange;
})();</script> </div></section><section id="adrotate_widgets-7" class="widget adrotate_widgets"><div class="widget-wrap"></div></section><section id="tag_cloud-3" class="widget widget_tag_cloud"><div class="widget-wrap"><h4 class="widget-title widgettitle">Thẻ đánh dấu</h4><div class="tagcloud"><a href="https://gpcoder.com/tag/annotation/" class="tag-cloud-link tag-link-146 tag-link-position-1" style="font-size: 12.495412844037pt;" aria-label="Annotation (8 mục)">Annotation</a> <a href="https://gpcoder.com/tag/authentication/" class="tag-cloud-link tag-link-205 tag-link-position-2" style="font-size: 9.2844036697248pt;" aria-label="Authentication (4 mục)">Authentication</a> <a href="https://gpcoder.com/tag/basic-java/" class="tag-cloud-link tag-link-132 tag-link-position-3" style="font-size: 22pt;" aria-label="Basic Java (48 mục)">Basic Java</a> <a href="https://gpcoder.com/tag/behavior-pattern/" class="tag-cloud-link tag-link-188 tag-link-position-4" style="font-size: 14.550458715596pt;" aria-label="Behavior Pattern (12 mục)">Behavior Pattern</a> <a href="https://gpcoder.com/tag/collection/" class="tag-cloud-link tag-link-139 tag-link-position-5" style="font-size: 20.330275229358pt;" aria-label="Collection (35 mục)">Collection</a> <a href="https://gpcoder.com/tag/creational-design-pattern/" class="tag-cloud-link tag-link-186 tag-link-position-6" style="font-size: 14.550458715596pt;" aria-label="Creational Design Pattern (12 mục)">Creational Design Pattern</a> <a href="https://gpcoder.com/tag/cau-truc-dieu-khien/" class="tag-cloud-link tag-link-143 tag-link-position-7" style="font-size: 10.311926605505pt;" aria-label="Cấu trúc điều khiển (5 mục)">Cấu trúc điều khiển</a> <a href="https://gpcoder.com/tag/database/" class="tag-cloud-link tag-link-212 tag-link-position-8" style="font-size: 10.311926605505pt;" aria-label="Database (5 mục)">Database</a> <a href="https://gpcoder.com/tag/dependency-injection/" class="tag-cloud-link tag-link-189 tag-link-position-9" style="font-size: 11.211009174312pt;" aria-label="Dependency Injection (6 mục)">Dependency Injection</a> <a href="https://gpcoder.com/tag/design-pattern/" class="tag-cloud-link tag-link-118 tag-link-position-10" style="font-size: 21.100917431193pt;" aria-label="Design pattern (41 mục)">Design pattern</a> <a href="https://gpcoder.com/tag/eclipse/" class="tag-cloud-link tag-link-135 tag-link-position-11" style="font-size: 15.064220183486pt;" aria-label="Eclipse (13 mục)">Eclipse</a> <a href="https://gpcoder.com/tag/exception/" class="tag-cloud-link tag-link-142 tag-link-position-12" style="font-size: 11.853211009174pt;" aria-label="Exception (7 mục)">Exception</a> <a href="https://gpcoder.com/tag/executor-service/" class="tag-cloud-link tag-link-170 tag-link-position-13" style="font-size: 8pt;" aria-label="Executor Service (3 mục)">Executor Service</a> <a href="https://gpcoder.com/tag/google-guice/" class="tag-cloud-link tag-link-197 tag-link-position-14" style="font-size: 9.2844036697248pt;" aria-label="Google Guice (4 mục)">Google Guice</a> <a href="https://gpcoder.com/tag/gson/" class="tag-cloud-link tag-link-116 tag-link-position-15" style="font-size: 11.211009174312pt;" aria-label="Gson (6 mục)">Gson</a> <a href="https://gpcoder.com/tag/hibernate/" class="tag-cloud-link tag-link-215 tag-link-position-16" style="font-size: 16.477064220183pt;" aria-label="Hibernate (17 mục)">Hibernate</a> <a href="https://gpcoder.com/tag/how-to/" class="tag-cloud-link tag-link-145 tag-link-position-17" style="font-size: 11.853211009174pt;" aria-label="How to (7 mục)">How to</a> <a href="https://gpcoder.com/tag/interceptor/" class="tag-cloud-link tag-link-218 tag-link-position-18" style="font-size: 12.495412844037pt;" aria-label="Interceptor (8 mục)">Interceptor</a> <a href="https://gpcoder.com/tag/io/" class="tag-cloud-link tag-link-149 tag-link-position-19" style="font-size: 15.064220183486pt;" aria-label="IO (13 mục)">IO</a> <a href="https://gpcoder.com/tag/jackson/" class="tag-cloud-link tag-link-117 tag-link-position-20" style="font-size: 8pt;" aria-label="Jackson (3 mục)">Jackson</a> <a href="https://gpcoder.com/tag/java-8/" class="tag-cloud-link tag-link-115 tag-link-position-21" style="font-size: 18.660550458716pt;" aria-label="Java 8 (26 mục)">Java 8</a> <a href="https://gpcoder.com/tag/java-core/" class="tag-cloud-link tag-link-109 tag-link-position-22" style="font-size: 9.2844036697248pt;" aria-label="Java Core (4 mục)">Java Core</a> <a href="https://gpcoder.com/tag/jdbc/" class="tag-cloud-link tag-link-191 tag-link-position-23" style="font-size: 10.311926605505pt;" aria-label="JDBC (5 mục)">JDBC</a> <a href="https://gpcoder.com/tag/jdk/" class="tag-cloud-link tag-link-130 tag-link-position-24" style="font-size: 10.311926605505pt;" aria-label="JDK (5 mục)">JDK</a> <a href="https://gpcoder.com/tag/jersey/" class="tag-cloud-link tag-link-207 tag-link-position-25" style="font-size: 13.137614678899pt;" aria-label="Jersey (9 mục)">Jersey</a> <a href="https://gpcoder.com/tag/jms/" class="tag-cloud-link tag-link-220 tag-link-position-26" style="font-size: 12.495412844037pt;" aria-label="JMS (8 mục)">JMS</a> <a href="https://gpcoder.com/tag/jpa/" class="tag-cloud-link tag-link-214 tag-link-position-27" style="font-size: 14.550458715596pt;" aria-label="JPA (12 mục)">JPA</a> <a href="https://gpcoder.com/tag/json/" class="tag-cloud-link tag-link-162 tag-link-position-28" style="font-size: 13.651376146789pt;" aria-label="json (10 mục)">json</a> <a href="https://gpcoder.com/tag/junit/" class="tag-cloud-link tag-link-113 tag-link-position-29" style="font-size: 17.761467889908pt;" aria-label="JUnit (22 mục)">JUnit</a> <a href="https://gpcoder.com/tag/jwt/" class="tag-cloud-link tag-link-204 tag-link-position-30" style="font-size: 8pt;" aria-label="JWT (3 mục)">JWT</a> <a href="https://gpcoder.com/tag/message-queue/" class="tag-cloud-link tag-link-223 tag-link-position-31" style="font-size: 16.477064220183pt;" aria-label="Message Queue (17 mục)">Message Queue</a> <a href="https://gpcoder.com/tag/mockito/" class="tag-cloud-link tag-link-196 tag-link-position-32" style="font-size: 13.137614678899pt;" aria-label="Mockito (9 mục)">Mockito</a> <a href="https://gpcoder.com/tag/multithreading/" class="tag-cloud-link tag-link-165 tag-link-position-33" style="font-size: 14.550458715596pt;" aria-label="Multithreading (12 mục)">Multithreading</a> <a href="https://gpcoder.com/tag/oop/" class="tag-cloud-link tag-link-141 tag-link-position-34" style="font-size: 16.091743119266pt;" aria-label="OOP (16 mục)">OOP</a> <a href="https://gpcoder.com/tag/performance/" class="tag-cloud-link tag-link-136 tag-link-position-35" style="font-size: 8pt;" aria-label="Performance (3 mục)">Performance</a> <a href="https://gpcoder.com/tag/powermockito/" class="tag-cloud-link tag-link-198 tag-link-position-36" style="font-size: 9.2844036697248pt;" aria-label="PowerMockito (4 mục)">PowerMockito</a> <a href="https://gpcoder.com/tag/rabbitmq/" class="tag-cloud-link tag-link-222 tag-link-position-37" style="font-size: 15.706422018349pt;" aria-label="RabbitMQ (15 mục)">RabbitMQ</a> <a href="https://gpcoder.com/tag/reflection/" class="tag-cloud-link tag-link-144 tag-link-position-38" style="font-size: 11.211009174312pt;" aria-label="Reflection (6 mục)">Reflection</a> <a href="https://gpcoder.com/tag/report/" class="tag-cloud-link tag-link-163 tag-link-position-39" style="font-size: 11.211009174312pt;" aria-label="Report (6 mục)">Report</a> <a href="https://gpcoder.com/tag/rest/" class="tag-cloud-link tag-link-201 tag-link-position-40" style="font-size: 18.403669724771pt;" aria-label="REST (25 mục)">REST</a> <a href="https://gpcoder.com/tag/soap/" class="tag-cloud-link tag-link-202 tag-link-position-41" style="font-size: 11.853211009174pt;" aria-label="SOAP (7 mục)">SOAP</a> <a href="https://gpcoder.com/tag/structuaral-pattern/" class="tag-cloud-link tag-link-187 tag-link-position-42" style="font-size: 12.495412844037pt;" aria-label="Structuaral Pattern (8 mục)">Structuaral Pattern</a> <a href="https://gpcoder.com/tag/thread-pool/" class="tag-cloud-link tag-link-166 tag-link-position-43" style="font-size: 8pt;" aria-label="Thread Pool (3 mục)">Thread Pool</a> <a href="https://gpcoder.com/tag/unit-test/" class="tag-cloud-link tag-link-192 tag-link-position-44" style="font-size: 11.853211009174pt;" aria-label="Unit Test (7 mục)">Unit Test</a> <a href="https://gpcoder.com/tag/webservice/" class="tag-cloud-link tag-link-122 tag-link-position-45" style="font-size: 19.045871559633pt;" aria-label="Webservice (28 mục)">Webservice</a></div></div></section></aside></div></div><div class="footer-widgets"><div class="wrap"><div class="widget-area footer-widgets-1 footer-widget-area"><section id="linkview_widget-4" class="widget widget_linkview_widget"><div class="widget-wrap"><h4 class="widget-title widgettitle">Liên kết website</h4><div class="linkview" id="lvw-sc-id-1"><div class="lvw-category"><h2 class="lvw-cat-name">Design Pattern</h2><div id="lvw-id-1-1"><ul class="lvw-link-list"><li class="lvw-list-item"><div class="lvw-link design-pattern"><div class="lvw-item-name"><a class="lvw-anchor" href="https://refactoring.guru/" target="_self" title="Refactoring Guru (Refactoring and Design Patterns)" rel="nofollow ">Refactoring Guru</a></div></div></li><li class="lvw-list-item"><div class="lvw-link design-pattern"><div class="lvw-item-name"><a class="lvw-anchor" href="https://sourcemaking.com/" target="_self" title="Source Making (Refactoring and Design Patterns)" rel="nofollow ">Source Making</a></div></div></li></ul></div></div><div class="lvw-category"><h2 class="lvw-cat-name">Lập trình Java</h2><div id="lvw-id-1-2"><ul class="lvw-link-list"><li class="lvw-list-item"><div class="lvw-link lap-trinh-java"><div class="lvw-item-name"><a class="lvw-anchor" href="https://www.javatpoint.com/" target="_blank" title="JavaTpoint (JavaTpoint offers Industrial and Summer Training on Java, PHP, .Net, Hadoop, Data Analytics, R Programming, SAP, Android, Python, Oracle, Seleninum, Linux, C++ and many more technologies in Delhi/NCR, India.)" rel="nofollow ">JavaTpoint</a></div></div></li><li class="lvw-list-item"><div class="lvw-link lap-trinh-java"><div class="lvw-item-name"><a class="lvw-anchor" href="https://www.javaworld.com/" target="_blank" title="JavaWorld (JavaWorld is the leading independent resource for enterprise Java™ technology developers, architects, and managers who want to learn more about Java and related technologies from professional developers and trusted industry experts.)" rel="nofollow ">JavaWorld</a></div></div></li><li class="lvw-list-item"><div class="lvw-link lap-trinh-java"><div class="lvw-item-name"><a class="lvw-anchor" href="https://www.journaldev.com/" target="_blank" title="Journaldev (JournalDev - Java, Java EE, Android, Python, Web Development Tutorials)" rel="nofollow ">Journaldev</a></div></div></li><li class="lvw-list-item"><div class="lvw-link lap-trinh-java"><div class="lvw-item-name"><a class="lvw-anchor" href="http://www.tutorialspoint.com" target="_self" title="TutorialsPoint (Java NIO, PyTorch, SLF4J, Parallax Scrolling, Java Cryptography, YAML, Python Data Science, Java i18n, GitLab, TestRail, VersionOne, DBUtils, Common CLI, Seaborn, Ansible, LOLCODE, Current Affairs 2018,  Apache Commons Collections)" rel="nofollow ">TutorialsPoint</a></div></div></li><li class="lvw-list-item"><div class="lvw-link lap-trinh-java"><div class="lvw-item-name"><a class="lvw-anchor" href="https://www.w3schools.com/" target="_self" title="W3Schools Online Web Tutorials (W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors. Tutorials: HTML, CSS, JS, JQuery, XML, SQL)" rel="nofollow ">W3Schools Online Web Tutorials</a></div></div></li></ul></div></div><div class="lvw-category"><h2 class="lvw-cat-name">Liên kết web</h2><div id="lvw-id-1-3"><ul class="lvw-link-list"><li class="lvw-list-item"><div class="lvw-link lien-ket-web"><div class="lvw-item-name"><a class="lvw-anchor" href="https://itphutran.com" target="_self" title="IT Phú Trần" rel="nofollow ">IT Phú Trần</a></div></div></li></ul></div></div></div></div></section></div><div class="widget-area footer-widgets-2 footer-widget-area"><section id="custom_html-3" class="widget_text widget widget_custom_html"><div class="widget_text widget-wrap"><h4 class="widget-title widgettitle">Giới thiệu</h4><div class="textwidget custom-html-widget"><a href="https://gpcoder.com">GP Coder</a> là trang web cá nhân, được thành lập với mục đích lưu trữ, chia sẽ kiến thức đã học và làm việc của tôi. Các bài viết trên trang này chủ yếu về ngôn ngữ Java và các công nghệ có liên quan đến Java như: Spring, JSF, Web Services, Unit Test, Hibernate, SQL, ... <br /> Hi vọng góp được chút ít công sức cho sự phát triển cộng đồng Coder Việt. <br /> <br /> <a href="https://gpcoder.com/tim-kiem-gp-coder-voi-google-search/">Tìm kiếm các bài viết của GP Coder với Google Search</a></div></div></section></div><div class="widget-area footer-widgets-3 footer-widget-area"><section id="custom_html-2" class="widget_text widget widget_custom_html"><div class="widget_text widget-wrap"><h4 class="widget-title widgettitle">Liên hệ</h4><div class="textwidget custom-html-widget">Các bạn có thể liên hệ với tôi thông qua:<ul class="contact-me"><li class="website">Trang <a href="/lien-he" target="_blank" rel="noopener">liên hệ</a></li><li class="linkedin">Linkedin: <a href="https://www.linkedin.com/in/gpcoder/" target="_blank" class="external" rel="nofollow noopener">gpcoder</a></li><li class="email">Email: <a href="mailto:contact@gpcoder.com?Subject=Liên%20hệ%20về..." target="_blank" rel="noopener">contact@gpcoder.com</a></li><li class="skype">Skype: <a href="skype:ptgiang56it?chat" target="_blank" rel="noopener">ptgiang56it</a></li></ul></div></div></section><section id="wpsr_follow_icons_widget-2" class="widget widget_wpsr_follow_icons_widget"><div class="widget-wrap"><h4 class="widget-title widgettitle">Follow me</h4><div class="socializer sr-followbar sr-32px sr-opacity sr-pad sr-multiline"><span class="sr-facebook "><a rel="nofollow" href="https://www.facebook.com/GPCoder/" target="_blank" title="Facebook fanpage" style="color: #ffffff" ><i class="fab fa-facebook-f"></i></a></span><span class="sr-twitter "><a rel="nofollow" href="https://twitter.com/gpcodervn" target="_blank" title="Twitter" style="color: #ffffff" ><i class="fab fa-twitter"></i></a></span><span class="sr-linkedin "><a rel="nofollow" href="https://www.linkedin.com/in/gpcoder/" target="_blank" title="LinkedIn" style="color: #ffffff" ><i class="fab fa-linkedin-in"></i></a></span><span class="sr-stackoverflow "><a rel="nofollow" href="https://stackoverflow.com/users/8784868/gp-coder" target="_blank" title="Stackoverflow" style="color: #ffffff" ><i class="fab fa-stack-overflow"></i></a></span><span class="sr-github "><a rel="nofollow" href="https://github.com/gpcodervn" target="_blank" title="Github" style="color: #ffffff" ><i class="fab fa-github"></i></a></span><span class="sr-youtube "><a rel="nofollow" href="https://www.youtube.com/channel/UCWTgV0nPgIzpo-NRhVxp3DQ" target="_blank" title="Youtube" style="color: #ffffff" ><i class="fab fa-youtube"></i></a></span><span class="sr-email "><a rel="nofollow" href="mailto:contact@gpcoder.com" target="_blank" title="Email" style="color: #ffffff" ><i class="fa fa-envelope"></i></a></span><span class="sr-skype "><a rel="nofollow" href="skype:ptgiang56it?chat" target="_blank" title="Skype" style="color: #ffffff" ><i class="fab fa-skype"></i></a></span></div></div></section></div></div></div><footer class="site-footer" itemscope itemtype="https://schema.org/WPFooter"><div class="wrap"><div class="creds"><p> Copyright 2021 © <a href="https://gpcoder.com">GP Coder</a> · All Rights Reserved · <a href="https://gpcoder.com/gioi-thieu">Giới thiệu</a> · <a href="https://gpcoder.com/chinh-sach">Chính sách</a> · <a href="https://gpcoder.com/dieu-khoan">Điều khoản</a> · <a href="https://gpcoder.com/lien-he">Liên hệ</a> ·</p></div><p></p></div></footer></div><script>window.jQuery || document.write('<script src="https://gpcoder.com/wp-includes/js/jquery/jquery.js"><\/script>')</script>  <script>var hide_fttb = ''</script>  <script>var wpsr_ajax_url = "https://gpcoder.com/wp-admin/admin-ajax.php";</script>  <script type="text/javascript">$('.footer-widgets').attr('id', 'footer-widgets');</script><script type='text/javascript' src='https://gpcoder.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js' id='syntaxhighlighter-core-js'></script> <script type='text/javascript' src='https://gpcoder.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js' id='syntaxhighlighter-brush-java-js'></script> <script type='text/javascript'>(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "https://gpcoder.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.head.appendChild( corecss );
		var themecssurl = "https://gpcoder.com/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeEclipse.css?ver=3.0.9b";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		document.head.appendChild( themecss );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['class-name'] = 'code-block';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();

	// Infinite scroll support
	if ( typeof( jQuery ) !== 'undefined' ) {
		jQuery( function( $ ) {
			$( document.body ).on( 'post-load', function() {
				SyntaxHighlighter.highlight();
			} );
		} );
	}</script> <script type='text/javascript' id='google_cse_v2-js-extra'>var scriptParams = {"google_search_engine_id":"014856167706040759743:4x2kwu85m5w"};</script> <script type='text/javascript' id='fttb-active-js-extra'>var fttb = {"topdistance":"300","topspeed":"300","animation":"fade","animationinspeed":"200","animationoutspeed":"200","scrolltext":"L\u00ean \u0111\u1ea7u trang","imgurl":"https:\/\/gpcoder.com\/wp-content\/plugins\/float-to-top-button\/images\/","arrow_img":"arrow003.png","arrow_img_url":"","position":"lowerright","spacing_horizontal":"20px","spacing_vertical":"20px","opacity_out":"75","opacity_over":"99","zindex":"2147483647"};</script> <script type='text/javascript' id='contact-form-7-js-extra'>var wpcf7 = {"apiSettings":{"root":"https:\/\/gpcoder.com\/wp-json\/contact-form-7\/v1","namespace":"contact-form-7\/v1"},"recaptcha":{"messages":{"empty":"H\u00e3y x\u00e1c nh\u1eadn r\u1eb1ng b\u1ea1n kh\u00f4ng ph\u1ea3i l\u00e0 robot."}},"cached":"1"};</script> <script type='text/javascript' id='kk-star-ratings-js-extra'>var kk_star_ratings = {"nonce":"d6075c00de","endpoint":"https:\/\/gpcoder.com\/wp-admin\/admin-ajax.php"};</script> <script type='text/javascript' id='toc-front-js-extra'>var tocplus = {"visibility_show":"Hi\u1ec3n th\u1ecb","visibility_hide":"\u1ea8n","width":"100%"};</script> <script type='text/javascript' id='q2w3_fixed_widget-js-extra'>var q2w3_sidebar_options = [{"sidebar":"sidebar","margin_top":10,"margin_bottom":0,"stop_id":"footer-widgets","screen_max_width":768,"screen_max_height":0,"width_inherit":false,"refresh_interval":1500,"window_load_hook":false,"disable_mo_api":false,"widgets":["gp_mostview_widget-3","toc-widget-2","archives-3","adrotate_widgets-7","tag_cloud-3"]}];</script> <script type='text/javascript' id='jquery-lazyloadxt-js-extra'>var a3_lazyload_params = {"apply_images":"1","apply_videos":"1"};</script> <script type='text/javascript' id='jquery-lazyloadxt-extend-js-extra'>var a3_lazyload_extend_params = {"edgeY":"200"};</script> <script type='text/javascript' src='https://cdn.onesignal.com/sdks/OneSignalSDK.js?' async='async' id='remote_sdk-js'></script> <script type="text/javascript" id="slb_footer">if ( !!window.jQuery ) {(function($){$(document).ready(function(){if ( !!window.SLB && SLB.has_child('View.init') ) { SLB.View.init({"ui_autofit":true,"ui_animate":false,"slideshow_autostart":false,"slideshow_duration":"6","group_loop":true,"ui_overlay_opacity":"0.8","ui_title_default":false,"theme_default":"slb_default","ui_labels":{"loading":"Loading","close":"Close","nav_next":"Next","nav_prev":"Previous","slideshow_start":"Start slideshow","slideshow_stop":"Stop slideshow","group_status":"Item %current% of %total%"}}); }
if ( !!window.SLB && SLB.has_child('View.assets') ) { {$.extend(SLB.View.assets, {"1297517501":{"id":4341,"type":"image","internal":true,"source":"https:\/\/gpcoder.com\/wp-content\/uploads\/2018\/09\/singleton-pattern.png","title":"singleton-pattern","caption":"","description":""}});} }
/* THM */
if ( !!window.SLB && SLB.has_child('View.extend_theme') ) { SLB.View.extend_theme('slb_baseline',{"name":"Baseline","parent":"","styles":[{"handle":"base","uri":"https:\/\/gpcoder.com\/wp-content\/plugins\/simple-lightbox\/themes\/baseline\/css\/style.css","deps":[]}],"layout_raw":"<div class=\"slb_container\"><div class=\"slb_content\">{{item.content}}<div class=\"slb_nav\"><span class=\"slb_prev\">{{ui.nav_prev}}<\/span><span class=\"slb_next\">{{ui.nav_next}}<\/span><\/div><div class=\"slb_controls\"><span class=\"slb_close\">{{ui.close}}<\/span><span class=\"slb_slideshow\">{{ui.slideshow_control}}<\/span><\/div><div class=\"slb_loading\">{{ui.loading}}<\/div><\/div><div class=\"slb_details\"><div class=\"inner\"><div class=\"slb_data\"><div class=\"slb_data_content\"><span class=\"slb_data_title\">{{item.title}}<\/span><span class=\"slb_group_status\">{{ui.group_status}}<\/span><div class=\"slb_data_desc\">{{item.description}}<\/div><\/div><\/div><div class=\"slb_nav\"><span class=\"slb_prev\">{{ui.nav_prev}}<\/span><span class=\"slb_next\">{{ui.nav_next}}<\/span><\/div><\/div><\/div><\/div>"}); }if ( !!window.SLB && SLB.has_child('View.extend_theme') ) { SLB.View.extend_theme('slb_default',{"name":"Default (Light)","parent":"slb_baseline","styles":[{"handle":"base","uri":"https:\/\/gpcoder.com\/wp-content\/plugins\/simple-lightbox\/themes\/default\/css\/style.css","deps":[]}]}); }})})(jQuery);}</script> <script type="text/javascript" id="slb_context">if ( !!window.jQuery ) {(function($){$(document).ready(function(){if ( !!window.SLB ) { {$.extend(SLB, {"context":["public","user_guest"]});} }})})(jQuery);}</script> 
 <script type="text/javascript" defer src="https://gpcoder.com/wp-content/cache/autoptimize/js/autoptimize_8544cb2da8e2b58c02fad25d33851b28.js"></script></body></html>